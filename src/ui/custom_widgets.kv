#:kivy 1.9.0
#:import _ __main__._

<I18NImageTabbedPanelHeader>:
    on_press: image.color = [1.0,1.0,1.0,0.5]
    on_release: image.color = [1.0,1.0,1.0,1.0]
    GridLayout:
        size_hint: [None, None]
        padding: ["5dp",0,"5dp",0]
        height: "34dp"
        width:root.width
        pos: root.pos
        cols: 2
        Image:
            id: image
            allow_stretch: True
            keep_ratio: True
            size_hint: [None, None]
            height: str(self.texture_size[1]) + "dp"
            width: str(self.texture_size[0]) + "dp"
            source: root.source
        Label:
            text: app.translation(root.text_source)

<I18NImageSpinnerOption>:
    size_hint_y: None
    height: '48dp'

<I18NImageSpinner>:
    background_normal: 'atlas://data/images/defaulttheme/spinner'
    background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled'
    background_down: 'atlas://data/images/defaulttheme/spinner_pressed'

<I18NLabel>:
    text: app.translation(self.text_source)

<I18NButton>:
    text: app.translation(self.text_source)

<I18NPopup>:
    title: app.translation(self.title_source)

<I18NToggleButton>:
    text: app.translation(self.text_source)

<I18NTabbedPanelItem>
    text: app.translation(self.text_source)

<I18NAccordionItem>:
    title: app.translation(self.title_source)

<I18NImageToggleButton>:
    on_press: image.color = [1.0,1.0,1.0,0.5]
    on_release: image.color = [1.0,1.0,1.0,1.0]
    text_height: "30dp"
    orientation: 'horizontal'
    BoxLayout:
        pos: self.parent.pos
        size: self.parent.size
        orientation: root.orientation
        padding: "10dp"
        Image:
            id: image
            allow_stretch: True
            keep_ratio: True
            size_hint_y: self.size_hint_y if root.orientation == 'horizontal' else None
            size_hint_x: self.size_hint_x if root.orientation == 'vertical' else None
            width: min(self.texture_size[0], root.width) if root.orientation == 'horizontal' else max(self.texture_size[0], root.width)
            height: min(self.texture_size[1], root.height) if root.orientation == 'vertical' else max(self.texture_size[1], root.height)
            source: root.source
            pos: [root.pos[0], root.pos[1]]
        Label:
            id: label_text
            text: app.translation(root.text_source)
            size_hint_y: self.size_hint_y if root.orientation == 'horizontal' else None
            #size_hint_x: self.size_hint_x if root.orientation == 'vertical' else None
            height: root.text_height

<I18NImageButton>:
    on_press: image.color = [1.0,1.0,1.0,0.5]
    on_release: image.color = [1.0,1.0,1.0,1.0]
    GridLayout:
        size_hint: [None, None]
        size: root.size
        pos: root.pos
        padding: [0, "5dp", 0, "5dp"] if root.orientation == 'vertical' else ["5dp", 0, "5dp", 0]
        cols: 2 if root.orientation == 'horizontal' else 1
        col_default_width: self.width if self.rows == 2 else 0
        rows: 2  if root.orientation == 'vertical' else 1
        row_default_height: self.height if self.cols == 2 else 0
        Image:
            id: image
            allow_stretch: True
            keep_ratio: True
            source: root.source
            size_hint: [None, None]
            height: dp(self.texture_size[1])
            width: dp(self.texture_size[0])
        Label:
            text: app.translation(root.text_source)

<ErrorPopup>:
    BoxLayout:
        orientation: 'vertical'
        I18NLabel:
            text_source: root.text
            height: "30dp"
            size_hint_y: None
        ScrollView:
            Label:
                text: root.details
                text_size: self.width, None
                size_hint_y: None
        I18NButton:
            text_source: _("Close")
            on_release: root.dismiss()
            height: "30dp"
            size_hint_y: None

<HorizontalLabelSlider>:
    orientation: 'vertical'
    size_hint_y:None
    height: "60dp"
    padding: "3dp"
    canvas.before:
        Color:
            rgba: 1.0, 1.0, 1.0, 0.1
        Rectangle:
            pos:  self.pos
            size: self.size
    BoxLayout:
        orientation:'horizontal'
        I18NLabel:
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            text_source: root.title
        Label:
            text_size: self.size
            halign: 'right'
            valign: 'middle'
            text: "{:.2f} {}".format(slider.value, root.unit)
    Slider:
        id: slider
        value: root.value
        min: root.min_value
        max: root.max_value
        step: root.step
        on_value: root.value = self.value

<VerticalLabelSlider>:
    orientation: 'vertical'
    padding: "3dp"
    canvas.before:
        Color:
            rgba: 1.0, 1.0, 1.0, 0.1
        Rectangle:
            pos:  self.pos
            size: self.size
    I18NLabel:
        size_hint_y:None
        height: "30dp"
        text_source: root.title
    Slider:
        id: slider
        orientation: 'vertical'
        value: root.value
        min: root.min_value
        max: root.max_value
        step: root.step
        on_value: root.value = self.value
    Label:
        size_hint_y:None
        height: "30dp"
        text: "{:.2f} {}".format(slider.value, root.unit)

<NumericInput>:
