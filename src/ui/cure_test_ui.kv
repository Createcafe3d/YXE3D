#:kivy 1.9.0
#:import _ infrastructure.langtools._
#:import FloatInput ui.custom_widgets.FloatInput
#:import I18NHelpPopup ui.peachy_widgets.I18NHelpPopup

<BaseSpeed>:
    orientation: 'horizontal'
    size_hint_y: None
    height: "30dp"
    I18NLabel:
        text_source: _('Base Speed')
    FloatInput:
        size_hint_x: 0.5
        id: base_speed_id
        text: '150.0'
        on_text: root.base_speed = float(self.text)

<HorizontalLabelSlider>:
    orientation: 'vertical'
    size_hint_y:None
    height: "60dp"
    BoxLayout:
        orientation:'horizontal'
        I18NLabel:
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            text_source: root.title
        Label:
            text_size: self.size
            halign: 'right'
            valign: 'middle'
            text: "{:.2f} {}".format(slider.value, root.unit)
    Slider:
        id: slider
        value: root.value
        min: root.min_value
        max: root.max_value
        step: root.step
        on_value: root.value = self.value

<VerticalLabelSlider>:
    orientation: 'vertical'
    I18NLabel:
        size_hint_y:None
        height: "30dp"
        text_source: root.title
    Slider:
        id: slider
        orientation: 'vertical'
        value: root.value
        min: root.min_value
        max: root.max_value
        step: root.step
        on_value: root.value = self.value
    Label:
        size_hint_y:None
        height: "30dp"
        text: "{:.2f} {}".format(slider.value, root.unit)

<CureTestUI>:
    name: 'curetestui'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            spacing: "3dp"
            BoxLayout:
                orientation: 'vertical'
                padding: "5dp"
                canvas.before:
                    Color:
                        rgba: 1.0, 1.0, 1.0, 0.2
                    Rectangle:
                        pos:  self.pos
                        size: self.size
                HorizontalLabelSlider:
                    id: minimum_speed
                    min_value: 10
                    max_value: 800
                    value: root.start_speed
                    title: _("Start Speed")
                    unit: "mm/s"
                    step: 1
                    on_value: root.start_speed = self.value
                HorizontalLabelSlider:
                    id: maximum_speed
                    min_value: root.start_speed
                    max_value: 1000
                    value: max(root.start_speed, self.value)
                    title: _("Stop Speed")
                    unit: "mm/s"
                    step: 1
                    on_value: root.stop_speed = self.value
                BoxLayout:
                    orientation:'horizontal'
                    VerticalLabelSlider:
                        id: base_height
                        min_value: 0
                        max_value: root.max_height - 10
                        value: root.base
                        title: _("Base Height")
                        unit: "mm"
                        step: 1
                        on_value: root.base = self.value
                    VerticalLabelSlider:
                        id: total_height
                        min_value: root.base + 10
                        max_value: root.max_height
                        value: root.test_height
                        title: _("Total Height")
                        unit: "mm"
                        step: 1
                        on_value: root.test_height = self.value
                I18NImageButton:
                    source: "resources/icons/cure_rate_test_run_cure_test-24x24.png"
                    size_hint_y: None
                    height: "30dp"
                    text_source: _('Run Cure Test Now')
                    on_release: root.print_now()
            BoxLayout:
                padding: "5dp"
                canvas.before:
                    Color:
                        rgba: 1.0, 1.0, 1.0, 0.3
                    Rectangle:
                        pos:  self.pos
                        size: self.size
                RelativeLayout:
                    id: moveit
                    Label:
                        id: start_speed
                        text: "{:.0f} mm/s".format(root.start_speed)
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: "30dp"
                        pos: [0, ((root.base / root.max_height) * (moveit.height - 30)) - self.height / 2]
                    Label:
                        id: stop_speed
                        text: "{:.0f} mm/s".format(root.stop_speed)
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: "30dp"
                        pos: [0, test_height_image.pos[1] + test_height_image.height - self.height / 2]

                    Label:
                        id: start_height
                        text: "{:.0f} mm".format(root.base)
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: "30dp"
                        pos: [(moveit.width / 3) * 2, ((root.base / root.max_height) * (moveit.height - 30)) - self.height / 2]
                    Label:
                        id: stop_height
                        text: "{:.0f} mm/s".format(root.test_height)
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: "30dp"
                        pos: [(moveit.width / 3) * 2, test_height_image.pos[1] + test_height_image.height - self.height / 2]

                    Label:
                        id: selected_height
                        text: "{:.0f} mm/s".format(best_height_image.y / max(1, (moveit.height - 30)) * root.max_height)
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: "30dp"
                        pos: [(moveit.width / 3) * 2, best_height_image.y]

                    BoxLayout:
                        id: base_image
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height: ((root.base / root.max_height) * (moveit.height - 30))
                        pos: [moveit.width / 3, 0]
                        canvas.before:
                            Color:
                                rgba: 0.12, 0.18, 0.93, 1.0
                            Rectangle:
                                pos:  self.pos
                                size: self.size
                        I18NLabel:
                            id: label
                            text_source: _("Base")
                    BoxLayout:
                        id: test_height_image
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height:  ((root.test_height - root.base) / root.max_height) * (moveit.height - 30)
                        pos: [moveit.width / 3,  base_image.height ]
                        canvas.before:
                            Color:
                                rgba: 0.23, 0.04, 0.51, 1.0
                            Rectangle:
                                pos:  self.pos 
                                size: self.size
                        I18NLabel:
                            text_source: _("Test")

                    BoxLayout:
                        id: best_height_image
                        size_hint: [None,None]
                        width: moveit.width / 3
                        height:  "3dp"
                        x: moveit.width / 3
                        y: base_image.height + 10
                        canvas.before:
                            Color:
                                rgba: 0., 0., 0., 1.0
                            Rectangle:
                                pos:  self.pos
                                size: self.size

            BoxLayout:
                canvas.before:
                    Color:
                        rgba: 0.0, 1.0, 0.0, 1.0
                    Rectangle:
                        pos:  self.pos
                        size: self.size
                Label:
                    text: "Final Settings"
        I18NImageButton:
            source: "resources/icons/general_help-24x24.png"
            text_source: _("Help me")
            on_release: I18NHelpPopup(text=_('Markup- Cure Rate'), title=_("Help - Cure Rate Settings"), size_hint=(0.9, 0.9)).open()
            size_hint_y:None
            height: "30dp"
        I18NImageButton:
            source: "resources/icons/general_back-24x24.png"
            size_hint_y: None
            height: app.button_height
            text_source: _('Back')
            on_release: app.root.current = 'mainui'


